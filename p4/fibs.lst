     1                                  ; WILLEM WILCOX
     2                                  ; Program 4
     3                                  ; 10/09/23
     4                                  ; If you're reading this, have a wonderful day
     5                                  
     6                                  SECTION .data
     7                                  ; define data/variables here.  Think DB, DW, DD, DQ
     8                                  
     9 00000000 00000000                FIBS_ONE: DD 0
    10 00000004 01000000                FIBS_TWO: DD 1
    11                                  
    12                                  SECTION .bss
    13                                  ; define uninitialized data here
    14 00000000 <res 00000040>          Fibs: RESD 16
    15                                  
    16                                  SECTION .text
    17                                  global _main
    18                                  _main:
    19                                  ; put your code here.
    20                                  
    21                                  ; assign Fibs[0]
    22 00000000 BB00000000              mov ebx,0
    23 00000005 8B0D[00000000]          mov ecx,[FIBS_ONE]
    24 0000000B 898B[00000000]          mov [Fibs + ebx],ecx
    25                                  
    26                                  ; assign Fibs[1]
    27 00000011 BB01000000              mov ebx,1 ; Fibs index
    28 00000016 8B0D[04000000]          mov ecx,[FIBS_TWO]
    29 0000001C 890C9D[00000000]        mov [Fibs + ebx*4],ecx ; *4 to account for size of data
    30                                  
    31                                  ; loop for Fibs[2-15]
    32 00000023 BB02000000              mov ebx,2
    33                                  loop_start:
    34 00000028 8B0D[00000000]          	mov ecx,[FIBS_ONE]
    35 0000002E 8B15[04000000]          	mov edx,[FIBS_TWO]
    36 00000034 01D1                    	add ecx,edx ; ECX now contains new FIBS_TWO
    37 00000036 8915[00000000]          	mov [FIBS_ONE],edx ; FIBS_ONE is now the old FIBS_TWO
    38 0000003C 890D[04000000]          	mov [FIBS_TWO],ecx
    39                                  	; update Fibs[EBX] with new FIBS_TWO
    40 00000042 890C9D[00000000]        	mov [Fibs + ebx*4],ecx ; *4 to account for data size
    41 00000049 83C301                  	add ebx,1
    42 0000004C 83FB10                  	cmp ebx,16
    43 0000004F 7ED7                    	jle loop_start
    44                                  ; end of loop
    45                                  
    46                                  
    47                                  lastBreak:
    48                                  
    49                                  ; Normal termination code
    50 00000051 B801000000              mov eax, 1
    51 00000056 BB00000000              mov ebx, 0
    52 0000005B CD80                    int 80h
